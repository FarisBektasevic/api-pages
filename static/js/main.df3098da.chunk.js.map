{"version":3,"sources":["Buttons.jsx","Facts.jsx","Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Buttons","text","handleClick","className","onClick","Facts","facts","openNextPage","openPreviusPage","page","setPage","map","fact","i","Header","changeLimit","limit","getFacts","value","type","onChange","e","App","useState","setLimit","setFacts","a","axios","get","response","console","log","data","useEffect","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6VAWeA,EARC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACvB,OACE,qBAAKC,UAAU,MAAMC,QAASF,EAA9B,SACGD,KCwEQI,G,MA1ED,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,MAAOC,EAAmD,EAAnDA,aAAcC,EAAqC,EAArCA,gBAAiBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC3D,OACE,qCACE,qBAAKP,UAAU,QAAf,SACGG,EAAMK,KAAI,SAACC,EAAMC,GAChB,OACE,sBAAKV,UAAU,WAAf,UACE,wCAAWU,EAAI,KACdD,EAAKA,OAFuBC,QAOrC,sBAAKV,UAAU,WAAf,UACE,cAAC,EAAD,CAASD,YAAaM,EAAiBP,KAAK,MAC5C,sBAAKE,UAAU,QAAf,UACE,qBACEC,QAAS,WACPM,EAAQ,IAFZ,eAOA,qBACEN,QAAS,WACPM,EAAQ,IAFZ,eAOA,yCACCD,EAAO,GACN,qBACEL,QAAS,WACPM,EAAQD,EAAO,IAFnB,SAKGA,EAAO,IAIZ,8BAAMA,IACLA,EAAO,KACN,qBACEL,QAAS,WACPM,EAAQD,EAAO,IAFnB,SAKGA,EAAO,IAIZ,yCACA,qBACEL,QAAS,WACPM,EAAQ,MAFZ,iBAOA,qBACEN,QAAS,WACPM,EAAQ,MAFZ,oBAQF,cAAC,EAAD,CAASR,YAAaK,EAAcN,KAAK,cCnDlCa,G,MAlBA,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACpC,OACE,mCACE,2CACA,gCACE,uBACEC,MAAOF,EACPG,KAAK,SACLC,SAAU,SAACC,GACTN,EAAYM,MAGhB,wBAAQjB,QAASa,EAAjB,2BCwCOK,MAjDf,WACE,MAA0BC,mBAAS,GAAnC,mBAAOP,EAAP,KAAcQ,EAAd,KACA,EAA0BD,mBAAS,IAAnC,mBAAOjB,EAAP,KAAcmB,EAAd,KACA,EAAwBF,mBAAS,GAAjC,mBAAOd,EAAP,KAAaC,EAAb,KAMMO,EAAQ,uCAAG,4BAAAS,EAAA,2DACXV,EAAQ,GADG,gCAEQW,IAAMC,IAAN,4CACkBZ,EADlB,iBACgCP,IAHxC,OAEToB,EAFS,OAKbC,QAAQC,IAAIF,EAASG,MACrBP,EAASI,EAASG,KAAKA,MANV,2CAAH,qDA0Bd,OARAC,qBAAU,WACRH,QAAQC,IAAIf,KACX,CAACA,IAEJiB,qBAAU,WACRhB,MACC,CAACR,IAGF,sBAAKN,UAAU,MAAf,UACE,cAAC,EAAD,CAAQa,MAAOA,EAAOD,YAhCN,SAACM,GACnBG,EAASH,EAAEa,OAAOhB,QA+BgCD,SAAUA,IAC1D,cAAC,EAAD,CACEV,aApBe,WACfE,EAAO,KAAKC,EAAQD,EAAO,IAoB3BD,gBAjBkB,WAClBC,EAAO,GAAGC,EAAQD,EAAO,IAiBzBH,MAAOA,EACPG,KAAMA,EACNC,QAASA,QCrCFyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.df3098da.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Buttons.css'\r\n\r\nconst Buttons = ({ text, handleClick }) => {\r\n  return (\r\n    <div className=\"btn\" onClick={handleClick}>\r\n      {text}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Buttons\r\n","import React from 'react'\r\nimport Buttons from './Buttons'\r\nimport './Facts.css'\r\n\r\nconst Facts = ({ facts, openNextPage, openPreviusPage, page, setPage }) => {\r\n  return (\r\n    <>\r\n      <div className=\"facts\">\r\n        {facts.map((fact, i) => {\r\n          return (\r\n            <div className=\"fact-box\" key={i}>\r\n              <h4>Fact: {i + 1}</h4>\r\n              {fact.fact}\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n      <div className=\"page-nav\">\r\n        <Buttons handleClick={openPreviusPage} text=\"<\" />\r\n        <div className=\"pages\">\r\n          <div\r\n            onClick={() => {\r\n              setPage(1)\r\n            }}\r\n          >\r\n            1\r\n          </div>\r\n          <div\r\n            onClick={() => {\r\n              setPage(2)\r\n            }}\r\n          >\r\n            2\r\n          </div>\r\n          <span>.....</span>\r\n          {page > 1 && (\r\n            <div\r\n              onClick={() => {\r\n                setPage(page - 1)\r\n              }}\r\n            >\r\n              {page - 1}\r\n            </div>\r\n          )}\r\n\r\n          <div>{page}</div>\r\n          {page < 332 && (\r\n            <div\r\n              onClick={() => {\r\n                setPage(page + 1)\r\n              }}\r\n            >\r\n              {page + 1}\r\n            </div>\r\n          )}\r\n\r\n          <span>.....</span>\r\n          <div\r\n            onClick={() => {\r\n              setPage(331)\r\n            }}\r\n          >\r\n            331\r\n          </div>\r\n          <div\r\n            onClick={() => {\r\n              setPage(332)\r\n            }}\r\n          >\r\n            332\r\n          </div>\r\n        </div>\r\n        <Buttons handleClick={openNextPage} text=\">\" />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Facts\r\n","import React from 'react'\r\nimport './Header.css'\r\n\r\nconst Header = ({ changeLimit, limit, getFacts }) => {\r\n  return (\r\n    <header>\r\n      <h1>Cat facts</h1>\r\n      <div>\r\n        <input\r\n          value={limit}\r\n          type=\"number\"\r\n          onChange={(e) => {\r\n            changeLimit(e)\r\n          }}\r\n        />\r\n        <button onClick={getFacts}>Click</button>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport axios from 'axios'\nimport Facts from './Facts'\nimport Header from './Header'\n\nfunction App() {\n  const [limit, setLimit] = useState(1)\n  const [facts, setFacts] = useState([])\n  const [page, setPage] = useState(1)\n\n  const changeLimit = (e) => {\n    setLimit(e.target.value)\n  }\n\n  const getFacts = async () => {\n    if (limit > 0) {\n      let response = await axios.get(\n        `https://catfact.ninja/facts?limit=${limit}&page=${page}`\n      )\n      console.log(response.data)\n      setFacts(response.data.data)\n    }\n  }\n\n  const openNextPage = () => {\n    if (page < 332) setPage(page + 1)\n  }\n\n  const openPreviusPage = () => {\n    if (page > 1) setPage(page - 1)\n  }\n\n  useEffect(() => {\n    console.log(limit)\n  }, [limit])\n\n  useEffect(() => {\n    getFacts()\n  }, [page])\n\n  return (\n    <div className=\"App\">\n      <Header limit={limit} changeLimit={changeLimit} getFacts={getFacts} />\n      <Facts\n        openNextPage={openNextPage}\n        openPreviusPage={openPreviusPage}\n        facts={facts}\n        page={page}\n        setPage={setPage}\n      />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}